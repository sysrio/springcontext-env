name: release
on:
  workflow_dispatch:

jobs:
  release-approval:
    environment:
      name: approve
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - run: echo 'approved'

  release:
    needs:
      - release-approval
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive
          repository: ${{ github.event.repository.full_name }}
          ref: ${{ github.ref }}

      - name: Remove SNAPSHOT from project version number
        run: |
          # Read the current version from gradle.properties
          current_version=$(grep -oP '^version = \K[0-9]+\.[0-9]+\.[0-9]+(-SNAPSHOT)?' gradle.properties)
          echo 'Current version: $current_version'
          echo 'Removing SNAPSHOT'
          sed -i '/^version = /s/-SNAPSHOT//' gradle.properties
          echo cat gradle.properties

      - name: Setup git
        uses: ./.github/actions/setup/git
        with:
          username: ${{ vars.GIT_USERNAME }}
          email: ${{ vars.USER_EMAIL }}

      - name: Setup Gradle
        uses: ./.github/actions/setup/gradle

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build and Publish
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: ./gradlew clean publish --stacktrace --no-daemon --debug --max-workers 2

      - name: Release with JReleaser
        run: ./gradlew jreleaserFullRelease --no-daemon --stacktrace -x test
        env:
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.GPG_PUBLIC_KEY }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.GPG_SECRET_KEY }}
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
          JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.MAVENCENTRAL_SONATYPE_USERNAME }}
          JRELEASER_MAVENCENTRAL_SONATYPE_TOKEN: ${{ secrets.MAVENCENTRAL_SONATYPE_TOKEN }}
