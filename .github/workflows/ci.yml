name: ci-lib

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - dev
      - main
  push:
    branches:
      - dev
      - main
  workflow_dispatch:

jobs:
  build-and-test:
    name: Build, Test, and Analyze
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: recursive

      - name: Setup Gradle
        uses: ./.github/actions/setup/gradle

      - name: Cache SonarQube packages
        uses: actions/cache@v4
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar-${{ hashFiles('**/sonar-project.properties') }}
          restore-keys: ${{ runner.os }}-sonar

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Build, Test, and Analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew clean build sonar --stacktrace --scan --no-daemon --debug --max-workers 2

      - name: Upload Test Results
        if: failure() && (github.event_name == 'pull_request' || github.event_name == 'push')
        uses: actions/upload-artifact@v3
        with:
          name: test-results-${{ matrix.os }}
          path: "**/build/test-results/**/*.xml"
